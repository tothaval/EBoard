<UserControl x:Class="EBoard.Views.ElementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EBoard.Views"
             xmlns:vms="clr-namespace:EBoard.ViewModels"
             xmlns:ut="clr-namespace:EBoard.Utilities"
             xmlns:esdkCtrl="clr-namespace:EBoardSDK.Controls;assembly=EBoardSDK"
             d:DataContext="{d:DesignInstance Type=vms:ElementViewModel}"
             x:Name="Element"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Foreground="Black"
             Loaded="Element_Loaded"
             Unloaded="Element_Unloaded">

    <UserControl.Resources>

        <ut:VisibilityConverterToCollapsed x:Key="VisibilityToCollapsed"/>
        <SolidColorBrush x:Key="fgbrush" Color="#77CCEE"/>
        <SolidColorBrush x:Key="bgbrush" Color="#000000"/>

        <Style TargetType="Label" >
            <Setter Property="Foreground" Value="{StaticResource fgbrush}"/>
            <Setter Property="Background" Value="{StaticResource bgbrush}"/>
        </Style>

    </UserControl.Resources>


    <Border MouseLeftButtonDown="Border_MouseLeftButtonDown"
            MouseLeftButtonUp="Border_MouseLeftButtonUp"
            MouseMove="Border_MouseMove"
            MouseWheel="Border_MouseWheel"
            RenderTransformOrigin="{Binding TransformOriginPoint, NotifyOnSourceUpdated=True}"
            RenderTransform="{Binding RotateTransformValue, NotifyOnSourceUpdated=True}">

        <Border.InputBindings>
            <MouseBinding Gesture="Shift+LeftClick" Command="{Binding SelectCommand}"/>
        </Border.InputBindings>

        <Border.ContextMenu>

            <ContextMenu Name="ElementContextMenu">

                <Label Content="Element"/>

                <MenuItem Header="Placement">
                    <WrapPanel Orientation="Horizontal">
                        <Label Content="X"
                           MinWidth="50"/>
                        <Label Content="{Binding XPosition, NotifyOnSourceUpdated=True}"
                           MinWidth="30"/>
                        <Label Content="{Binding XMaximumValue, NotifyOnSourceUpdated=True, Mode=OneWay}"
                           MinWidth="30"/>
                        <Slider Value="{Binding XSliderValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="{Binding XMaximumValue, NotifyOnSourceUpdated=True}"
                            Width="330"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Y"
                           MinWidth="50"/>
                        <Label Content="{Binding YPosition, NotifyOnSourceUpdated=True}"
                               MinWidth="30"/>
                        <Label Content="{Binding YMaximumValue, NotifyOnSourceUpdated=True, Mode=OneWay}"
                               MinWidth="30"/>
                        <Slider Value="{Binding YSliderValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="{Binding YMaximumValue, UpdateSourceTrigger=PropertyChanged, Delay=20}"
                            Width="330"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Z"
                               MinWidth="50"/>
                        <Label Content="{Binding ZIndexValue, NotifyOnSourceUpdated=True}"
                               MinWidth="30"/>
                        <Slider Value="{Binding ZIndexValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="{Binding ZMinimumValue, NotifyOnSourceUpdated=True}"
                            Maximum="{Binding ZMaximumValue, NotifyOnSourceUpdated=True}"
                            Width="360"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="R"
                           MinWidth="50"/>
                        <Label Content="{Binding RotationAngleValue, NotifyOnSourceUpdated=True}"
                               MinWidth="30"/>
                        <Slider Value="{Binding RotationAngleValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="-180"
                            Maximum="180"
                            Width="361"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>

                </MenuItem>


                <MenuItem Header="Design">


                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Width"
                               MinWidth="50"/>
                        <Label Content="{Binding WidthValue, NotifyOnSourceUpdated=True}"
                               MinWidth="35"/>
                        <Slider Value="{Binding WidthValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="60"
                            Maximum="1024"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>


                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Height"
                               MinWidth="50"/>
                        <Label Content="{Binding HeightValue, StringFormat=d0, NotifyOnSourceUpdated=True}"
                               MinWidth="35"/>
                        <Slider Value="{Binding HeightValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="60"
                            Maximum="1024"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Corners"
                               MinWidth="50"/>
                        <Label Content="{Binding CornerRadiusValue, NotifyOnSourceUpdated=True}"
                               MinWidth="30"/>
                        <Slider Value="{Binding CornerRadiusValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="90"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>

                    <MenuItem Header="Colors">
                        <MenuItem Header="Background">
                            <esdkCtrl:SolidColorBrushSetup DataContext="{Binding BackgroundBrushSetup}"/>
                        </MenuItem>

                        <MenuItem Header="Foreground">
                            <esdkCtrl:SolidColorBrushSetup DataContext="{Binding ForegroundBrushSetup}"/>
                        </MenuItem>

                        <MenuItem Header="Border">
                            <esdkCtrl:SolidColorBrushSetup DataContext="{Binding BorderBrushSetup}"/>
                        </MenuItem>

                        <MenuItem Header="Highlight">
                            <esdkCtrl:SolidColorBrushSetup DataContext="{Binding HighlightBrushSetup}"/>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="+Image" Command="{Binding SetImageCommand}"/>

                    <MenuItem Header="Reset" Command="{Binding ResetImageCommand}"/>

                </MenuItem>

                <MenuItem Header="Delete" Command="{Binding DeleteElementCommand}"/>

            </ContextMenu>

        </Border.ContextMenu>


        <!-- Z und Rotation über Element ausgeben, später per option oder custom control
                schick machen
                
                Foreground="{Binding Plugin.BrushManagement.Foreground}"
                geht irgendwie nicht, obwohl es für das kontextmenu geht...        
        -->

        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border Background="{Binding Plugin.BrushManagement.Background, NotifyOnSourceUpdated=True}"
                    BorderBrush="{Binding Plugin.BrushManagement.Border, NotifyOnSourceUpdated=True}"
                    BorderThickness="{Binding Plugin.BorderManagement.BorderThickness, NotifyOnSourceUpdated=True}"
                    CornerRadius="{Binding Plugin.BorderManagement.CornerRadius, NotifyOnSourceUpdated=True}"
                    
                    MouseLeftButtonDown="Border_MouseLeftButtonDown_1"
                    MouseLeftButtonUp="Border_MouseLeftButtonUp_1"
                    MouseMove="Border_MouseMove_1"
                    
                    Padding="{Binding Plugin.BorderManagement.Padding}"
                    MinHeight="60"
                    MinWidth="60"
                    Width="{Binding Plugin.BorderManagement.Width, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                    Height="{Binding Plugin.BorderManagement.Height, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                    Grid.Row="0"
                    Grid.RowSpan="2">


                <ContentPresenter Content="{Binding Plugin}"/>

            </Border>

            <TextBlock Foreground="{Binding Plugin.BrushManagement.Highlight}"
                           MinWidth="30"
                           Text="{Binding ZIndexValue, NotifyOnSourceUpdated=True}"
                           TextWrapping="Wrap"
                           Margin="5 0 0 0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Grid.Row="0"/>

            <TextBlock Foreground="{Binding Plugin.BrushManagement.Highlight}"
                       Text="{Binding RotationAngleValue, NotifyOnSourceUpdated=True}"
                       TextWrapping="Wrap"
                       Margin="0 0 5 0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top"
                           Grid.Row="0"/>
        </Grid>

    </Border>

</UserControl>