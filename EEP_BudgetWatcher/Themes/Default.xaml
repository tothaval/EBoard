<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:comps="clr-namespace:EEP_BudgetWatcher.Components"
                    xmlns:vms="clr-namespace:EEP_BudgetWatcher.ViewModels"
                    xmlns:views="clr-namespace:EEP_BudgetWatcher.Views">

    <DataTemplate DataType="{x:Type vms:BudgetWatcherMainViewModel}">
        <views:BudgetWatcherMainView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:BudgetChangeViewModel}">
        <views:BudgetChangeView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:NoteViewModel}">
        <comps:NoteView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:SetupFieldViewModel}">
        <comps:SetupField/>
    </DataTemplate>

    <SolidColorBrush x:Key="BackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="TextBrush" Color="#444"/>
    <SolidColorBrush x:Key="HeaderBrush" Color="DimGray"/>
    <SolidColorBrush x:Key="SelectionBrush" Color="#FEA"/>

    <Thickness x:Key="VisibilityFieldBorderPadding">0</Thickness>

    <CornerRadius x:Key="VisibilityField_CornerRadius">5</CornerRadius>
    <CornerRadius x:Key="Button_CornerRadius">15</CornerRadius>

    <FontFamily x:Key="FF">Verdana</FontFamily>
    <sys:Double x:Key="FS">11</sys:Double>
    <sys:Double x:Key="HFS">14</sys:Double>
    <sys:String x:Key="MaximizeContextMenuItemHeader">Maximize</sys:String>


    <!-- Calendar styles -->
    <!--#region Calendar -->
    <Style TargetType="Calendar" x:Key="CalendarStyle">

        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderThickness" Value="2"/>

    </Style>
    <!--#endregion-->


    <!-- combobox style: https://stackoverflow.com/questions/16392670/custom-combobox-in-wpf-application-->
    <!--#region ComboBoxStyle -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource TextBrush}"
                  BorderBrush="{DynamicResource TextBrush}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource BackgroundBrush}"
                  BorderBrush="{DynamicResource TextBrush}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource BackgroundBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{DynamicResource BackgroundBrush}"
                            Foreground="{DynamicResource TextBrush}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource BackgroundBrush}"

                                BorderThickness="1"
                                BorderBrush="{DynamicResource TextBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectionBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


    <!-- DatePicker styles -->
    <!--#region DatePicker -->
    <Style TargetType="DatePicker">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       Grid.Column="0">
                        </DatePickerTextBox>
                        <Button x:Name="PART_Button" Grid.Column="1">
                            <Button.Content>
                                <TextBlock Text="?" Padding="2 0"/>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">

                                    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
                                    <Setter Property="FontSize" Value="{DynamicResource FS}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True" />

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"
                              BorderThickness="2"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              CornerRadius="{DynamicResource Button_CornerRadius}"
                              Padding="5">
                                                    <Grid Background="Transparent">
                                                        <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Margin="0"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                />
                                                    </Grid>
                                                </Border>


                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                                                        <Setter Property="Opacity" Value="0.7"/>
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <!--<Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">

                                                <TextBlock Text="blabla dummi dum kram"/>

                                                <Button x:Name="PART_PreviousButton"
                                                        Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="28"/>
                                                <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}"  VerticalAlignment="Center"/>
                                                <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="28"/>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>-->
                                </Style>
                            </Button.Style>
                        </Button>
                        <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Opacity" Value="0.7"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DatePickerTextBox">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Opacity" Value="0.4"/>

            </Trigger>


        </Style.Triggers>

    </Style>

    <!--#endregion-->


    <!-- Button styles -->
    <!--#region buttons -->
    
    <Style TargetType="Button" x:Key="buttonStyle">

        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{DynamicResource Button_CornerRadius}"
                                Padding="5">
                        <Grid Background="Transparent">
                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  />
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ToggleButton" x:Key="centralTopToggleButtonStyle">

        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{DynamicResource Button_CornerRadius}"
                            Padding="4">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"                                              
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Grid.Column="1"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="BorderThickness" Value="6"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                            <Setter Property="FontStretch" Value="Expanded"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>

                            <Setter Property="FontStyle" Value="Normal"/>
                            <Setter Property="FontStretch" Value="Condensed"/>
                            <Setter Property="FontWeight" Value="Normal"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="toggleButtonStyle">

        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{DynamicResource Button_CornerRadius}"
                            Padding="2">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"                                              
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Grid.Column="1"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="BorderThickness" Value="6"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                            <Setter Property="FontStretch" Value="Expanded"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HeaderBrush}"/>

                            <Setter Property="FontStyle" Value="Normal"/>
                            <Setter Property="FontStretch" Value="Condensed"/>
                            <Setter Property="FontWeight" Value="Normal"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->

        
    <Style TargetType="Border" x:Key="VisibilityFieldBorder">
        <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{DynamicResource VisibilityField_CornerRadius}"/>
        <Setter Property="Padding" Value="{DynamicResource VisibilityFieldBorderPadding}"/>
        <Setter Property="Margin" Value="0 5 0 0"/>
    </Style>

    
    <!-- ListView styles -->
    <!--#region ListView styles -->

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Foreground" Value="Transparent"/>

        <!-- trying to deactivate focus rectangle arround the entire listview
           which appears on mouse over and selection, no effect, giving up for now. -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemsControl.FocusVisualStyle" Value="{x:Null}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ItemContainerStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border CornerRadius="2" SnapsToDevicePixels="True"  
                               BorderThickness="{TemplateBinding BorderThickness}"   
                               BorderBrush="{TemplateBinding BorderBrush}"   
                               Background="{TemplateBinding Background}">

                        <ContentPresenter Content="{Binding}"/>
                    </Border>


                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectionBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectionBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--#endregion-->


    <!-- TextBlock styles -->
    <!--#region textblock -->
    
    <Style x:Key="DoubleValueTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    
    <Style x:Key="StringValueTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>
    
    <!--#endregion-->


    <!-- TextBox styles -->
    <!--#region textbox -->
    
    <Style x:Key="DoubleValueTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Width" Value="Auto"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
                      
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                    Name="Border"
                        CornerRadius="2" 
                        Padding="2"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource TextBrush}"
                        BorderThickness="1"  >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            
        </Setter>

        <!--<Style.Triggers>

            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
            </Trigger>

        </Style.Triggers>-->
        
    </Style>

    
    <Style x:Key="StringValueTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                    Name="Border"
                        CornerRadius="2" 
                        Padding="2"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource TextBrush}"
                        BorderThickness="1"  >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            
            </Setter>
    </Style>
    
    <!--#endregion-->


</ResourceDictionary>