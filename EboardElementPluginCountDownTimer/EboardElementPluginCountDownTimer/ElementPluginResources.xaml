<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:elementPlugin ="clr-namespace:EboardElementPluginCountDownTimer.Views"
                    xmlns:elementPluginVM ="clr-namespace:EboardElementPluginCountDownTimer.ViewModels">

    <DataTemplate DataType="{x:Type elementPluginVM:CountDownTimerViewModel}">
        <elementPlugin:CountDownTimerView/>
    </DataTemplate>

    <!--<SolidColorBrush x:Key="BackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="TextBrush" Color="Gold"/>-->

    <FontFamily x:Key="FF">EB Garamond</FontFamily>
    <sys:Double x:Key="FS">16</sys:Double>
    <sys:Double x:Key="HFS">24</sys:Double>

    <CornerRadius x:Key="Radius">15</CornerRadius>

    <!--#region buttons -->

    <Style TargetType="Button" x:Key="buttonStyle">

        <Setter Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource EBoardEboardBrowserBrushBorder}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{DynamicResource Radius}"
                                Padding="5">
                        <Grid Background="Transparent">
                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  />
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style TargetType="Calendar" x:Key="CalendarStyle">

        <Setter Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource EBoardEboardBrowserBrushForeground}" />
        <Setter Property="BorderThickness" Value="2"/>

    </Style>


    <!-- combobox style: https://stackoverflow.com/questions/16392670/custom-combobox-in-wpf-application-->
    <!--#region ComboBoxStyle -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource EBoardEboardBrowserBrushBackground}"
                  BorderBrush="{DynamicResource EBoardEboardBrowserBrushForeground}"
                  BorderThickness="0" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource EBoardEboardBrowserBrushBackground}"
                  BorderBrush="{DynamicResource EBoardEboardBrowserBrushForeground}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource EBoardEboardBrowserBrushBackground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="64"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,33,3"
                            VerticalAlignment="Center"                                              
                            HorizontalAlignment="Right"
                                              />

                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     HorizontalContentAlignment="Right"
                                     
                            VerticalAlignment="Center" 
                            Margin="3,3,33,3"
                            Focusable="True" 
                            Background="{DynamicResource EBoardEboardBrowserBrushBackground}"
                            Foreground="{DynamicResource EBoardEboardBrowserBrushForeground}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                                HorizontalAlignment="Right"
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource EBoardEboardBrowserBrushBackground}"

                                BorderThickness="2"
                                BorderBrush="{DynamicResource EBoardEboardBrowserBrushBorder}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                                BorderThickness="1"
                              Padding="2 2 5 2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource HFS}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>
    <!--#endregion-->


    <!--#region TextBox -->
    <Style x:Key="DoubleValueTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FF}"/>
        <Setter Property="FontSize" Value="{DynamicResource FS}"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Width" Value="Auto"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                    Name="Border"
                        CornerRadius="2" 
                        Padding="2"
                        Background="Transparent"
                        BorderBrush="{DynamicResource EBoardEboardBrowserBrushForeground}"
                        BorderThickness="0"  >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource EBoardEboardBrowserBrushForeground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EBoardEboardBrowserBrushBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--#endregion-->
</ResourceDictionary>