<UserControl x:Class="EBoard.Views.ElementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EBoard.Views"
             xmlns:vms="clr-namespace:EBoard.ViewModels"
             xmlns:ic="clr-namespace:EBoard.InnerComponents"
             xmlns:ut="clr-namespace:EBoard.Utilities"
             x:Name="Element"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Foreground="Black"
             Loaded="Element_Loaded"
             Unloaded="Element_Unloaded">

    <UserControl.Resources>

        <ut:VisibilityConverterToCollapsed x:Key="VisibilityToCollapsed"/>

    </UserControl.Resources>


    <Border MouseLeftButtonDown="Border_MouseLeftButtonDown"
            MouseLeftButtonUp="Border_MouseLeftButtonUp"
            MouseMove="Border_MouseMove"
            RenderTransformOrigin="{Binding TransformOriginPoint, NotifyOnSourceUpdated=True}"
            RenderTransform="{Binding RotateTransformValue, NotifyOnSourceUpdated=True}">



        <Border.ContextMenu>

            <ContextMenu Name="ElementContextMenu">

                <Label Content="Element" Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"/>

                <MenuItem Header="Placement">
                    <WrapPanel Orientation="Horizontal">
                    <Label Content="Z"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="50"/>
                    <Label Content="{Binding ZIndexValue, NotifyOnSourceUpdated=True}"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="30"/>
                    <Slider Value="{Binding ZIndexValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="{Binding ZMinimumValue, NotifyOnSourceUpdated=True}"
                            Maximum="{Binding ZMaximumValue, NotifyOnSourceUpdated=True}"
                            Width="360"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>
                </WrapPanel>

                <WrapPanel Orientation="Horizontal">
                <Label Content="R"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="50"/>
                    <Label Content="{Binding RotationAngleValue, NotifyOnSourceUpdated=True}"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="30"/>
                    <Slider Value="{Binding RotationAngleValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="359"
                            Width="360"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                </WrapPanel>

                </MenuItem>
                
                
                <MenuItem Header="Design">


                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Width"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="50"/>
                        <Label Content="{Binding WidthValue, NotifyOnSourceUpdated=True}"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="35"/>
                        <Slider Value="{Binding WidthValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="1"
                            Maximum="1024"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>


                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Height"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="50"/>
                        <Label Content="{Binding HeightValue, StringFormat=d0, NotifyOnSourceUpdated=True}"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="35"/>
                        <Slider Value="{Binding HeightValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="1"
                            Maximum="1024"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                    </WrapPanel>

                    <Border Visibility="{Binding IsContent, Converter={StaticResource VisibilityToCollapsed}, NotifyOnSourceUpdated=True}">
                        <WrapPanel Orientation="Horizontal">
                            <Label Content="Corners"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="50"/>
                            <Label Content="{Binding CornerRadiusValue, NotifyOnSourceUpdated=True}"
                               Foreground="{Binding ContentContainer.BrushManager.Foreground, NotifyOnSourceUpdated=True}"
                           MinWidth="30"/>
                            <Slider Value="{Binding CornerRadiusValue, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="0"
                            Maximum="90"
                            MinWidth="100"
                            SmallChange="1"
                            LargeChange="5"
                            Interval="1"
                            Orientation="Horizontal"/>

                        </WrapPanel>
                    </Border>

                    <MenuItem Header="+Image" Command="{Binding ImageCommand}"/>

                    <MenuItem Header="Reset" Command="{Binding ResetBackgroundCommand}"/>

                </MenuItem>

                <MenuItem Header="Delete" Command="{Binding RightClickCommand}"/>

            </ContextMenu>

        </Border.ContextMenu>


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding ZIndexValue, NotifyOnSourceUpdated=True}"/>

            <Grid Background="Transparent" Grid.Row="1">
                <Border Visibility="{Binding IsContent, Converter={StaticResource VisibilityToCollapsed}}">
                    <local:ContentView DataContext="{Binding ContentViewModel}"/>
                </Border>

                <Border Visibility="{Binding IsShape, Converter={StaticResource VisibilityToCollapsed}}">
                    <local:ShapeView DataContext="{Binding ShapeViewModel}"/>
                </Border>
            </Grid>
        </Grid>

    </Border>

</UserControl>