<UserControl x:Class="EBoard.Views.MainWindowMenuBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vms="clr-namespace:EBoard.ViewModels"
             xmlns:views="clr-namespace:EBoard.Views"
             d:DataContext="{d:DesignInstance Type=vms:MainWindowMenuBarViewModel}"
             
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="{Binding Title}" Foreground="{Binding MainViewModel.BrushManager.Foreground, NotifyOnSourceUpdated=True}" FontSize="28"
                   Grid.Row="0" Grid.Column="0"/>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Left">

            <ToggleButton Content="Eboard Browser"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          IsChecked="{Binding EBoardBrowserSwitch,
                NotifyOnSourceUpdated=True,
                UpdateSourceTrigger=PropertyChanged}"/>
            
            <Border CornerRadius="5" Background="Black"
                    BorderBrush="Orange"
                    BorderThickness="3"
                    MinWidth="50" MaxHeight="50"
                    >
                
                <Menu>
                    <MenuItem Header="+Elements">

                        <!-- MenuItems sollten später aus einer Liste der
                        verfügbaren Plugins dynamisch ermittelt und erzeugt werden,
                        jedem ist dann der nötige Headerwert und CommandParameter
                        (x:string oder so)
                        aus dem ViewModel zuzuweisen dass müsste das Interface mit
                        regeln, fürs erste erstmal so-->
                        <MenuItem Header="Standard Text"
                                  Command="{Binding InvokeElementCommand}"
                                  CommandParameter="Elements.StandardText.Standard Text"/>
                    </MenuItem>

                </Menu>
            </Border>

            <Border CornerRadius="5" Background="Black"
                    BorderBrush="Orange"
                    BorderThickness="3"
                    MinWidth="50" MaxHeight="50"
                    >
                <Menu>
                    <MenuItem Header="+Shapes">
                        <MenuItem Header="Rec" Command="{Binding InvokePrototypeShapeElementCommand}"/>
                        <MenuItem Header="Ell" Command="{Binding InvokeEllipseShapeCommand}"/>
                    </MenuItem>

                </Menu>
            </Border>
            
            <Border CornerRadius="5" Background="Black"
                    BorderBrush="Orange"
                    BorderThickness="3"
                    MinWidth="50" MaxHeight="50"
                    >

                <Menu>
                    <MenuItem Header="+Tools">
                        <MenuItem Header="Session Uptime Clock"
                                  Command="{Binding InvokeElementCommand}"
                                  CommandParameter="Tools.SessionUptimeClock.Session Uptime Clock"/>
                        
                        <MenuItem Header="Empty Linear" Command="{Binding InvokeElementCommand}"
                                  CommandParameter="Tools.EmptyLinear.Empty Linear"/>
                        
                        <MenuItem Header="Empty Radial" Command="{Binding InvokeElementCommand}"
                                  CommandParameter="Tools.EmptyRadial.Empty Radial"/>

                    </MenuItem>

                </Menu>
            </Border>

        </StackPanel>

    </Grid>
</UserControl>
