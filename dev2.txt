	EBoard

implementieren:

eboard save and load
element save and load

ValueChangeLists für Debugging, Logging und Zurücksetzing-ö
ValueChangeList<loggingobject>
ggf. ValueChangeListBefore<loggingobject>, bei jeder property führen für logging und rückgängig machen von
Schritten, eine Instanz pro Kontext(z.b. eboard bei EBoard führt diese Listen der FlatViewModel bei SLCC)
dazu ein toString override für alles definieren, und den Wert, sowie den string und die indexpostion des
objekts als loggingobjekt in der Liste speichern, für rückgängig machen müsste aus der ersten Stringposition
das Viewmodel ermittelt werden, um die property zuordnen und auf den before wert zu setzen.
per .xml sichern und Datum und Zeit speichern im filename und bei jedem Start die Listen neu anlegen.
Sonderoption und rückgängig machen auch für Vortage erlauben? Dazu müsste die Liste zusammen gestückelt werden
aus allen Listen in der richtigen Reihenfolge. Abgesehen von der ChangeList noch irgendwo für den User ausgeben,
was worauf zurück gesetzt wurde., sowie laufende Nummer des Rückschritts. Eine overloadfunktion nutzen, um die
verschiedenen Typen zu prozessieren, z.b. String, double, int, Ausgabe für Log ähnlich...
In der Loggingklasse als Funktion einbauen
1 Liste könnte schon reichen, wenn beide Werte übergeben werden.

soundmixprogramm als element entwickeln, anfang 2 musikdateien parallel und versetzt starten können, Lautstärke
separat regelbar. MixStreamSave, später MixStreamSave.

textelement|texteditorelement feature: berechne zeile


ggf. auch, wie auf dem Zettel geplant, die Elemente einschränken, die auf dem eboard erzeugt werden können




workflow optimization:

script zur ausführung in einem ordner, kopiert diesen ordner und benennt die kopie in ORDNERNAME_DATUM um,
script in Umgebungsvariable eintragen, Sprache: C/C++|Python|Rust|C#.
Argumente { 
ohne -> aktuelles Datum, -d Datum -> übergebenes Datum, -s String -> übergebener String, -u String -> der Ordner
wird komplett umbenannt, beim Rest an den vorhandenen Namen mit Unterstrich angefügt, -r String -> rechte des Ordners
festlegen(read, write and read), -f string -> specify sourcefolder, -z|7z|t(ar) -> packe in Archiv, -z{zip Argumente,
also zip als Prozess mit den Argumenten öffnen, auch für tar und 7z}, -m String -> move to targetfolder
}.



fixen:

CanvasViewModel PropertyBinding
Panel.ZIndex, ElementViewModel/ContainerViewModel PropertyBinding
Panel.ZIndex sowie VisibilityProperty für Levelsystem. DataContext
für CustomElement im ElementContainerView verändern/setzen.

delete führt nicht zur entfernung des sichtbaren eboards



optimieren:






überlegen:

Strg Linksklick könnte ein Property kontext menü erzeugen, dass unter dem Klick zusammen laufende
properties ermittelt und wenn erlaubt, zur Änderung das Wertänderungselement pro gefundener 
Property ins dynamische Kontrollmenü einbaut, rechtsklick könnte ein kontextmenü mit vordefinierten
funktionen, z.b. relink bei filelink(aeui) sein, falls dieses in Eboard so genannt werden sollte.

rechtskick auf border, popup für corner radius click per slider?

viewmodel zu .xml binden und darüber änderungen überwachen?

file  als "öffnen mit" Funktion realisieren, hä, nur wie?. Process nicht selber realisieren lassen, 
sondern per zugewiesenem Programm. Dieses starten mit Parameter Dateiname, erste Idee dazu.



recherchieren:

wie viewmodels aus anderen namespaces oder ordnern in ein viewmodel integrieren?
frage: wie slcc im eboard als Element aufrufen, ohne den slcc sourcecode ins projekt zu integrieren,
und alle namespaces darin auf eboard zu ändern? .dll?